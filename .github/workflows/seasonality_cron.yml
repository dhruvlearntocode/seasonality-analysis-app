# FILE: .github/workflows/seasonality_cron.yml
# --- Updated with a more robust git pull strategy ---

name: Calculate Daily Seasonality

on:
  schedule:
    # Runs at 1 AM UTC every day (after market closes)
    - cron: '0 1 * * *'
  
  # Allows you to run this workflow manually from the Actions tab on GitHub for testing.
  workflow_dispatch:

jobs:
  calculate-and-commit:
    permissions:
      contents: write
    
    strategy:
      fail-fast: false
      matrix:
        run: [1]
    retries: 2

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas numpy

      - name: Run Seasonality Calculation Script
        run: python worker/calculate_seasonality.py

      - name: Commit and push if changed
        run: |
          # Configure git with a bot user name and email to make the commit.
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # --- FIX: Use rebase strategy to sync with remote changes ---
          # This will fetch the latest changes and re-apply our local commit on top,
          # avoiding the "rejected" error.
          git pull --rebase
          
          # Stage the new/updated results file generated by the script.
          git add public/scan_results.json
          
          # Commit only if there are changes to the results file.
          git diff --staged --quiet || git commit -m "Update daily seasonality scan results"
          
          # Push the commit back to your main branch.
          git push
